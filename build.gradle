plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'droni'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'

    // OpenAPI UI and codegen
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.52'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '8.0.1.Final'

}
swaggerSources {
    droni {
        inputFile = file("$rootDir/src/main/resources/openapi.yaml")
        code {
            language = 'spring'
            configFile = file("$rootDir/src/main/resources/codegenConfig.json")
            additionalProperties = [
                    "interfaceOnly":true,
                    "hideGenerationTimestamp": true,
                    "jakarta":true,
                    "useBeanValidation":true,
                    "dateLibrary": "java8",
                    "java21":true
            ]
        }
    }

}
compileJava.dependsOn(swaggerSources.droni.code)
sourceSets.main.java.srcDir("${swaggerSources.droni.code.outputDir}/src/main/java")
sourceSets.main.resources.srcDir("${swaggerSources.droni.code.outputDir}/src/main/resources")
tasks.named('test') {
    useJUnitPlatform()
}
